{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\nconst _1 = require(\".\");\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(index, query, options) {\n  return (0, _1.pushSearchOptions)(['FT.SEARCH', index, query], options);\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n  const documents = [];\n  for (let i = 1; i < reply.length; i += 2) {\n    const tuples = reply[i + 1];\n    documents.push({\n      id: reply[i],\n      value: tuples.length === 2 && tuples[0] === '$' ? JSON.parse(tuples[1]) : (0, generic_transformers_1.transformTuplesReply)(tuples)\n    });\n  }\n  return {\n    total: reply[0],\n    documents\n  };\n}\nexports.transformReply = transformReply;","map":{"version":3,"names":["Object","defineProperty","exports","value","transformReply","transformArguments","IS_READ_ONLY","FIRST_KEY_INDEX","generic_transformers_1","require","_1","index","query","options","pushSearchOptions","reply","documents","i","length","tuples","push","id","JSON","parse","transformTuplesReply","total"],"sources":["C:/Users/nates/Pro/anagrams/node_modules/@redis/search/dist/commands/SEARCH.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformReply = exports.transformArguments = exports.IS_READ_ONLY = exports.FIRST_KEY_INDEX = void 0;\nconst generic_transformers_1 = require(\"@redis/client/dist/lib/commands/generic-transformers\");\nconst _1 = require(\".\");\nexports.FIRST_KEY_INDEX = 1;\nexports.IS_READ_ONLY = true;\nfunction transformArguments(index, query, options) {\n    return (0, _1.pushSearchOptions)(['FT.SEARCH', index, query], options);\n}\nexports.transformArguments = transformArguments;\nfunction transformReply(reply) {\n    const documents = [];\n    for (let i = 1; i < reply.length; i += 2) {\n        const tuples = reply[i + 1];\n        documents.push({\n            id: reply[i],\n            value: tuples.length === 2 && tuples[0] === '$' ?\n                JSON.parse(tuples[1]) :\n                (0, generic_transformers_1.transformTuplesReply)(tuples)\n        });\n    }\n    return {\n        total: reply[0],\n        documents\n    };\n}\nexports.transformReply = transformReply;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,kBAAkB,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,eAAe,GAAG,KAAK,CAAC;AAC7G,MAAMC,sBAAsB,GAAGC,OAAO,CAAC,sDAAsD,CAAC;AAC9F,MAAMC,EAAE,GAAGD,OAAO,CAAC,GAAG,CAAC;AACvBP,OAAO,CAACK,eAAe,GAAG,CAAC;AAC3BL,OAAO,CAACI,YAAY,GAAG,IAAI;AAC3B,SAASD,kBAAkBA,CAACM,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC/C,OAAO,CAAC,CAAC,EAAEH,EAAE,CAACI,iBAAiB,EAAE,CAAC,WAAW,EAAEH,KAAK,EAAEC,KAAK,CAAC,EAAEC,OAAO,CAAC;AAC1E;AACAX,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,cAAcA,CAACW,KAAK,EAAE;EAC3B,MAAMC,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACtC,MAAME,MAAM,GAAGJ,KAAK,CAACE,CAAC,GAAG,CAAC,CAAC;IAC3BD,SAAS,CAACI,IAAI,CAAC;MACXC,EAAE,EAAEN,KAAK,CAACE,CAAC,CAAC;MACZd,KAAK,EAAEgB,MAAM,CAACD,MAAM,KAAK,CAAC,IAAIC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAC3CG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,GACrB,CAAC,CAAC,EAAEX,sBAAsB,CAACgB,oBAAoB,EAAEL,MAAM;IAC/D,CAAC,CAAC;EACN;EACA,OAAO;IACHM,KAAK,EAAEV,KAAK,CAAC,CAAC,CAAC;IACfC;EACJ,CAAC;AACL;AACAd,OAAO,CAACE,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}