{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nates/Pro/anagrams/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/nates/Pro/anagrams/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import'./App.css';import anagramMap from'./anagramMap.txt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"img\",{className:\"typewriter\",src:\"typewriter.png\",alt:\"typewriter\"})}),/*#__PURE__*/_jsx(\"p\",{children:\"Search for Anagrams\"}),/*#__PURE__*/_jsx(\"input\",{id:\"search\",className:\"searchField\",placeholder:\"enter word or letters\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"myButton\",value:\"Search\",onClick:handleClickOnGenerateButton}),/*#__PURE__*/_jsx(\"p\",{id:\"searchFor\",className:\"searchFor\"}),/*#__PURE__*/_jsx(\"p\",{id:\"anagramsResults\",className:\"anagramResults\"})]})});}var handleClickOnGenerateButton=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var localAnagramMap,searchFor,sortedWordKey,output;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(anagramMap);// in case the backend is unresponsive, use this local map\nlocalAnagramMap=new Map();localAnagramMap.set('dstuy',['dusty','study']);localAnagramMap.set('eilv',['live','evil']);searchFor=document.getElementById('search').value;sortedWordKey=searchFor.split('').sort().join('').toLowerCase();document.getElementById('searchFor').innerHTML=\"searching...\";//const responseFromBackend = await fetch(\"http://localhost:3000/?word=\" + searchFor);\n//const anagramsJSON = await responseFromBackend.json();\n//output = anagramsJSON.anagramsResults;\n// fetch with a timeout of 10 seconds\n//const controller = new AbortController();\n//const timeout = setTimeout(() => { controller.abort(); }, 10000);\n//const responseFromBackend = await fetch(\"http://localhost:3000/?word=\" + searchFor, { signal: controller.signal });\n//fuzzy match one letter\nsortedWordKey+=\"u\";sortedWordKey=sortedWordKey.split('').sort().join('').toLowerCase();output=localAnagramMap.get(sortedWordKey)||'no anagrams found';// the view is responsible for formatting the output\noutput=styleOutput(output);document.getElementById('anagramsResults').innerHTML=output;document.getElementById('searchFor').innerHTML=\"search for: \"+searchFor;case 13:case\"end\":return _context.stop();}},_callee);}));return function handleClickOnGenerateButton(){return _ref.apply(this,arguments);};}();function styleOutput(input){return input.toString().replace(/,([a-z])/gi,', $1');// space after commas\n}export default App;","map":{"version":3,"names":["anagramMap","jsx","_jsx","jsxs","_jsxs","App","className","children","src","alt","id","placeholder","type","value","onClick","handleClickOnGenerateButton","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","localAnagramMap","searchFor","sortedWordKey","output","wrap","_callee$","_context","prev","next","console","log","Map","set","document","getElementById","split","sort","join","toLowerCase","innerHTML","get","styleOutput","stop","apply","arguments","input","toString","replace"],"sources":["C:/Users/nates/Pro/anagrams/src/App.js"],"sourcesContent":["import './App.css';\nimport anagramMap from './anagramMap.txt';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <img\n            className=\"typewriter\"\n            src=\"typewriter.png\"\n            alt=\"typewriter\"\n          ></img>\n        </div>\n        <p>Search for Anagrams</p>\n        <input\n          id=\"search\"\n          className=\"searchField\"\n          placeholder=\"enter word or letters\"\n        ></input>\n        <input\n          type=\"submit\"\n          className=\"myButton\"\n          value=\"Search\"\n          onClick={handleClickOnGenerateButton}\n        ></input>\n        <p id=\"searchFor\" className=\"searchFor\"></p>\n        <p id=\"anagramsResults\" className=\"anagramResults\"></p>\n      </header>\n    </div>\n  );\n}\n\nconst handleClickOnGenerateButton = async () => {\n\n  console.log(anagramMap)\n\n  // in case the backend is unresponsive, use this local map\n  let localAnagramMap = new Map();\n  localAnagramMap.set('dstuy', ['dusty', 'study']);\n  localAnagramMap.set('eilv', ['live', 'evil']);\n\n  let searchFor = document.getElementById('search').value;\n  let sortedWordKey = searchFor.split('').sort().join('').toLowerCase();\n  document.getElementById('searchFor').innerHTML = \"searching...\"\n\n  //const responseFromBackend = await fetch(\"http://localhost:3000/?word=\" + searchFor);\n  //const anagramsJSON = await responseFromBackend.json();\n  //output = anagramsJSON.anagramsResults;\n\n  // fetch with a timeout of 10 seconds\n  //const controller = new AbortController();\n  //const timeout = setTimeout(() => { controller.abort(); }, 10000);\n  //const responseFromBackend = await fetch(\"http://localhost:3000/?word=\" + searchFor, { signal: controller.signal });\n\n\n  //fuzzy match one letter\n  sortedWordKey += \"u\"\n  sortedWordKey = sortedWordKey.split('').sort().join('').toLowerCase();\n\n  let output = localAnagramMap.get(sortedWordKey) || 'no anagrams found';\n\n  // the view is responsible for formatting the output\n  output = styleOutput(output);\n\n  document.getElementById('anagramsResults').innerHTML = output;\n  document.getElementById('searchFor').innerHTML = \"search for: \" + searchFor;\n}\n\nfunction styleOutput(input) {\n  return input.toString().replace(/,([a-z])/gi, ', $1'); // space after commas\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}