{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Anagram = void 0;\nvar fs = require(\"fs\"); // use this for esmodules and typescript\nvar Anagram = /** @class */function () {\n  function Anagram(dictionaryFile) {\n    this.dictionaryFile = dictionaryFile;\n    this.dictionary = [];\n    this.dictionaryFile = dictionaryFile; // loads dictionary file\n    // validations here to keep the code clean\n    if (!fs.existsSync(this.dictionaryFile)) {\n      throw new Error('File not found!');\n    }\n    //this.client = createClient();\n    //this.client.on('error', (err) => console.log('Redis Client Error', err));\n    this.anagramMap = new Map();\n    this.anagramMap.set('ags', 'gas, sag');\n    this.anagramMap.set('ahs', 'ash, sha, has');\n  }\n  Anagram.prototype.setup = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var dictionaryArr, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            dictionaryArr = this.loadDictionaryIntoArray();\n            _a = this;\n            return [4 /*yield*/, this.sortDictionaryWordsIntoRedis(dictionaryArr)];\n          case 1:\n            _a.sortedDictionary = _b.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  // how to preload the dictionary?\n  /*\n  async readAnagramsFromRedis(sortedWordKey: string) : Promise<string> {\n    let commaSeparatedAnagrams = await this.client.get(sortedWordKey);\n    let anagramsArr = commaSeparatedAnagrams.split(',').filter((item) => item.match(/^[a-z]+/)); // filter out empty strings\n    let anagramsWithCommas = anagramsArr.join(',');\n    return anagramsWithCommas;\n  }*/\n  Anagram.prototype.setAnagrams = function (wordKey, anagramsCommaSeperated) {\n    return __awaiter(this, void 0, void 0, function () {\n      var anagrams, cleaned;\n      return __generator(this, function (_a) {\n        anagrams = anagramsCommaSeperated.split(',');\n        cleaned = anagrams.filter(function (item) {\n          return item.match(/^[a-z]+/);\n        });\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  Anagram.prototype.findAnagrams = function (wordKey) {\n    var sortedWordKey = this.sortWord(wordKey);\n    var anagrams = this.anagramMap.get(sortedWordKey);\n    return new Promise(function (resolve, reject) {\n      resolve(anagrams || 'Anagrams not found');\n    });\n  };\n  Anagram.prototype.loadDictionaryIntoArray = function () {\n    var dictionary = fs.readFileSync(this.dictionaryFile, 'utf8').split('\\r\\n');\n    return dictionary;\n  };\n  Anagram.prototype.validateAlpha = function (word) {\n    if (word.match(/^[a-z]+$/)) {\n      return true;\n    }\n    return false;\n  };\n  Anagram.prototype.validateValues = function (word) {\n    if (word.match(/^[a-z]+,?$/)) {\n      return true;\n    }\n    return false;\n  };\n  // sorts the entire file and stores it in a hash map\n  Anagram.prototype.sortDictionaryWordsIntoRedis = function (dictionary) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _i, dictionary_1, word, sortedWordKey;\n      return __generator(this, function (_a) {\n        // node js doesn't have tail call recursion so we use a loop\n        for (_i = 0, dictionary_1 = dictionary; _i < dictionary_1.length; _i++) {\n          word = dictionary_1[_i];\n          sortedWordKey = this.sortWord(word);\n          //let preExistingWordsInValue = await this.readAnagramsFromRedis(sortedWordKey);\n          //await this.setAnagrams(sortedWordKey, preExistingWordsInValue + this.comma(word));\n        }\n\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  Anagram.prototype.preCommaWord = function (word) {\n    if (word) return \",\".concat(word);\n  };\n  // ascending order, a to z\n  // can try quick sort or radix sort for longer words\n  Anagram.prototype.sortWord = function (word) {\n    return word.split('').sort().join('');\n  };\n  return Anagram;\n}();\nexports.Anagram = Anagram;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","Anagram","fs","require","dictionaryFile","dictionary","existsSync","Error","anagramMap","Map","set","prototype","setup","dictionaryArr","_a","_b","loadDictionaryIntoArray","sortDictionaryWordsIntoRedis","sortedDictionary","setAnagrams","wordKey","anagramsCommaSeperated","anagrams","cleaned","split","filter","item","match","findAnagrams","sortedWordKey","sortWord","get","readFileSync","validateAlpha","word","validateValues","_i","dictionary_1","preCommaWord","concat","sort","join"],"sources":["C:/Users/nates/Pro/anagrams/frontend/src/anagram.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Anagram = void 0;\nvar fs = require(\"fs\"); // use this for esmodules and typescript\nvar Anagram = /** @class */ (function () {\n    function Anagram(dictionaryFile) {\n        this.dictionaryFile = dictionaryFile;\n        this.dictionary = [];\n        this.dictionaryFile = dictionaryFile; // loads dictionary file\n        // validations here to keep the code clean\n        if (!fs.existsSync(this.dictionaryFile)) {\n            throw new Error('File not found!');\n        }\n        //this.client = createClient();\n        //this.client.on('error', (err) => console.log('Redis Client Error', err));\n        this.anagramMap = new Map();\n        this.anagramMap.set('ags', 'gas, sag');\n        this.anagramMap.set('ahs', 'ash, sha, has');\n    }\n    Anagram.prototype.setup = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dictionaryArr, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        dictionaryArr = this.loadDictionaryIntoArray();\n                        _a = this;\n                        return [4 /*yield*/, this.sortDictionaryWordsIntoRedis(dictionaryArr)];\n                    case 1:\n                        _a.sortedDictionary = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // how to preload the dictionary?\n    /*\n    async readAnagramsFromRedis(sortedWordKey: string) : Promise<string> {\n      let commaSeparatedAnagrams = await this.client.get(sortedWordKey);\n      let anagramsArr = commaSeparatedAnagrams.split(',').filter((item) => item.match(/^[a-z]+/)); // filter out empty strings\n      let anagramsWithCommas = anagramsArr.join(',');\n      return anagramsWithCommas;\n    }*/\n    Anagram.prototype.setAnagrams = function (wordKey, anagramsCommaSeperated) {\n        return __awaiter(this, void 0, void 0, function () {\n            var anagrams, cleaned;\n            return __generator(this, function (_a) {\n                anagrams = anagramsCommaSeperated.split(',');\n                cleaned = anagrams.filter(function (item) { return item.match(/^[a-z]+/); });\n                return [2 /*return*/];\n            });\n        });\n    };\n    Anagram.prototype.findAnagrams = function (wordKey) {\n        var sortedWordKey = this.sortWord(wordKey);\n        var anagrams = this.anagramMap.get(sortedWordKey);\n        return new Promise(function (resolve, reject) {\n            resolve(anagrams || 'Anagrams not found');\n        });\n    };\n    Anagram.prototype.loadDictionaryIntoArray = function () {\n        var dictionary = fs.readFileSync(this.dictionaryFile, 'utf8').split('\\r\\n');\n        return dictionary;\n    };\n    Anagram.prototype.validateAlpha = function (word) {\n        if (word.match(/^[a-z]+$/)) {\n            return true;\n        }\n        return false;\n    };\n    Anagram.prototype.validateValues = function (word) {\n        if (word.match(/^[a-z]+,?$/)) {\n            return true;\n        }\n        return false;\n    };\n    // sorts the entire file and stores it in a hash map\n    Anagram.prototype.sortDictionaryWordsIntoRedis = function (dictionary) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, dictionary_1, word, sortedWordKey;\n            return __generator(this, function (_a) {\n                // node js doesn't have tail call recursion so we use a loop\n                for (_i = 0, dictionary_1 = dictionary; _i < dictionary_1.length; _i++) {\n                    word = dictionary_1[_i];\n                    sortedWordKey = this.sortWord(word);\n                    //let preExistingWordsInValue = await this.readAnagramsFromRedis(sortedWordKey);\n                    //await this.setAnagrams(sortedWordKey, preExistingWordsInValue + this.comma(word));\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    Anagram.prototype.preCommaWord = function (word) {\n        if (word)\n            return \",\".concat(word);\n    };\n    // ascending order, a to z\n    // can try quick sort or radix sort for longer words\n    Anagram.prototype.sortWord = function (word) {\n        return word.split('').sort().join('');\n    };\n    return Anagram;\n}());\nexports.Anagram = Anagram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}